# .github/workflows/ci-cd.yml
name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/sample-app:${{ github.sha }}
      - name: Set output image
        id: set-image
        run: echo "::set-output name=image::ghcr.io/${{ github.repository_owner }}/sample-app:${{ github.sha }}"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decode Kubeconfig
        run: echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.28.0'

      - name: Deploy to AKS
        env:
          IMAGE: ${{ needs.build-and-push.outputs.image }}
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl set image deployment/sample-app sample-app=${IMAGE} --namespace production || kubectl apply -f k8s/deployment.yaml
